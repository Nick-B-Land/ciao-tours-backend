package com.sait.ciaoToursEMS.model;

import javax.persistence.*;
import java.util.Date;
import java.util.Objects;

/**
 * Paystub
 * A paystub is a record of a single employee's pay.
 */
@Entity
@Table(name = "paystubs")
public class Paystub {
    /**
     * Paystub ID (primary key)
     * This value is auto-generated by the database
     */
    @Id
    @GeneratedValue
    @Column(name = "paystub_id")
    private long paystubId;

    /**
     * Employee ID that the paystub belongs to
     */
    @Column(name = "employee_id")
    private long employeeId;

    /**
     * Paystub date
     */
    @Column(name = "date_of_paystub")
    private Date dateOfPaystub;

    /**
     * Employee First Name
     */
    @Column(name = "first_name")
    private String firstName;

    /**
     * Employee Last Name
     */
    @Column(name = "last_name")
    private String lastName;

    /**
     * Employee address
     */
    @Column(name = "address")
    private String address;

    /**
     * Employee city
     */
    @Column(name = "city")
    private String city;

    /**
     * Employee email address
     */
    @Column(name = "email_address")
    private String emailAddress;

    /**
     * Employee monthly salary
     */
    @Column(name = "monthly_salary")
    private float monthlySalary;

    /**
     * Employee hourly wage
     */
    @Column(name = "hourly_wage")
    private float hourlyWage;

    /**
     * Employee hours taken off from a workday
     */
    @Column(name = "time_off_hours")
    private double timeOffHours;

    /**
     * Daily assitance fees
     */
    @Column(name = "daily_assistance_number")
    private double dailyAssistanceNumber;

    /**
     * Daily assitance charges
     */
    @Column(name = "daily_assistance_charges")
    private double dailyAssistanceCharges;

    /**
     * Hours worked on tour bookings
     */
    @Column(name = "tour_booking_hours")
    private double tourBookingHours;

    /**
     * Amount made on tour bookings
     */
    @Column(name = "tour_booking_charges")
    private double tourBookingCharges;

    /**
     * Total expenses
     */
    @Column(name = "expense_amount")
    private float expenseAmount;

    /**
     * Total work day hours for the paystub
     */
    @Column(name = "work_day_hours")
    private double workDayHours;

    /**
     * Total made on work day hours
     */
    @Column(name = "work_day_charges")
    private double workDayCharges;

    /**
     * Total overtime hours
     */
    @Column(name = "stat_hours")
    private double statHours;

    /**
     * Amount taxed on income tax
     */
    @Column(name = "income_tax")
    private double incomeTax;

    /**
     * Amount deducted for cpp
     */
    @Column(name = "cpp_deductions")
    private double cppDeductions;

    /**
     * Amount deducted for ei
     */
    @Column(name = "ei_deductions")
    private double eiDeductions;

    /**
     * Employee gross pay for the paystub
     */
    @Column(name = "gross_pay")
    private double grossPay;

    /**
     * Employee net pay for the paystub
     */
    @Column(name = "net_pay")
    private double netPay;

    /**
     * default constructor
     */
    public Paystub() {
    }

    /**
     * Contructor for Paystub
     * @param paystubId Paystub ID
     * @param employeeId    Employee ID
     * @param dateOfPaystub Paystub date
     * @param firstName    Employee First Name
     * @param lastName   Employee Last Name
     * @param address    Employee address
     * @param city     Employee city
     * @param emailAddress  Employee email address
     * @param monthlySalary Employee monthly salary
     * @param hourlyWage    Employee hourly wage
     * @param timeOffHours  Employee hours taken off from a workday
     * @param dailyAssistanceNumber Daily assitance fees
     * @param dailyAssistanceCharges    Daily assitance charges
     * @param tourBookingHours  Hours worked on tour bookings
     * @param tourBookingCharges    Amount made on tour bookings
     * @param expenseAmount   Total expenses
     * @param workDayHours  Total work day hours for the paystub
     * @param workDayCharges    Total made on work day hours
     * @param statHours   Total overtime hours
     * @param incomeTax         Amount taxed on income tax
     * @param cppDeductions    Amount deducted for cpp
     * @param eiDeductions   Amount deducted for ei
     * @param grossPay  Employee gross pay for the paystub
     * @param netPay    Employee net pay for the paystub
     */
    public Paystub(long paystubId, long employeeId, Date dateOfPaystub, String firstName, String lastName, String address, String city, String emailAddress, float monthlySalary, float hourlyWage, double timeOffHours, double dailyAssistanceNumber, double dailyAssistanceCharges, double tourBookingHours, double tourBookingCharges, float expenseAmount, double workDayHours, double workDayCharges, double statHours, double incomeTax, double cppDeductions, double eiDeductions, double grossPay, double netPay) {
        this.paystubId = paystubId;
        this.employeeId = employeeId;
        this.dateOfPaystub = dateOfPaystub;
        this.firstName = firstName;
        this.lastName = lastName;
        this.address = address;
        this.city = city;
        this.emailAddress = emailAddress;
        this.monthlySalary = monthlySalary;
        this.hourlyWage = hourlyWage;
        this.timeOffHours = timeOffHours;
        this.dailyAssistanceNumber = dailyAssistanceNumber;
        this.dailyAssistanceCharges = dailyAssistanceCharges;
        this.tourBookingHours = tourBookingHours;
        this.tourBookingCharges = tourBookingCharges;
        this.expenseAmount = expenseAmount;
        this.workDayHours = workDayHours;
        this.workDayCharges = workDayCharges;
        this.statHours = statHours;
        this.incomeTax = incomeTax;
        this.cppDeductions = cppDeductions;
        this.eiDeductions = eiDeductions;
        this.grossPay = grossPay;
        this.netPay = netPay;
    }

    /**
     * Get paystub ID
     * @return Paystub ID
     */
    public long getPaystubId() {
        return paystubId;
    }

    /**
     * Set paystub ID
     * @param paystubId Paystub ID
     */
    public void setPaystubId(long paystubId) {
        this.paystubId = paystubId;
    }

    /**
     * Get employee ID
     * @return Employee ID
     */
    public long getEmployeeId() {
        return employeeId;
    }

    /**
     * Set employee ID
     * @param employeeId Employee ID
     */
    public void setEmployeeId(long employeeId) {
        this.employeeId = employeeId;
    }

    /**
     * Get paystub date
     * @return Paystub date
     */
    public Date getDateOfPaystub() {
        return dateOfPaystub;
    }

    /**
     * Set paystub date
     * @param dateOfPaystub Paystub date
     */
    public void setDateOfPaystub(Date dateOfPaystub) {
        this.dateOfPaystub = dateOfPaystub;
    }

    /**
     * Get employee first name
     * @return Employee first name
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     * Set employee first name
     * @param firstName Employee first name
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Get employee last name
     * @return Employee last name
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * Set employee last name
     * @param lastName Employee last name
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * Get employee address
     * @return Employee address
     */
    public String getAddress() {
        return address;
    }

    /**
     * Set employee address
     * @param address Employee address
     */
    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * Get employee city
     * @return Employee city
     */
    public String getCity() {
        return city;
    }

    /**
     * Set employee city
     * @param city Employee city
     */
    public void setCity(String city) {
        this.city = city;
    }

    /**
     * Get employee email address
     * @return Employee email address
     */
    public String getEmailAddress() {
        return emailAddress;
    }

    /**
     * Set employee email address
     * @param emailAddress Employee email address
     */
    public void setEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
    }

    /**
     * Get employee monthly salary
     * @return Employee monthly salary
     */
    public float getMonthlySalary() {
        return monthlySalary;
    }

    /**
     * Set employee monthly salary
     * @param monthlySalary Employee monthly salary
     */
    public void setMonthlySalary(float monthlySalary) {
        this.monthlySalary = monthlySalary;
    }

    /**
     * Get employee hourly wage
     * @return Employee hourly wage
     */
    public float getHourlyWage() {
        return hourlyWage;
    }

    /**
     * Set employee hourly wage
     * @param hourlyWage Employee hourly wage
     */
    public void setHourlyWage(float hourlyWage) {
        this.hourlyWage = hourlyWage;
    }

    /**
     * Get employee hours off from work day
     * @return Employee hours off from work day
     */
    public double getTimeOffHours() {
        return timeOffHours;
    }

    /**
     * Set employee hours off from work day
     * @param timeOffHours Employee hours off from work day
     */
    public void setTimeOffHours(double timeOffHours) {
        this.timeOffHours = timeOffHours;
    }

    /**
     * Get daily assistance number
     * @return Daily assistance number
     */
    public double getDailyAssistanceNumber() {
        return dailyAssistanceNumber;
    }

    /**
     * Set daily assistance number
     * @param dailyAssistanceNumber Daily assistance number
     */
    public void setDailyAssistanceNumber(double dailyAssistanceNumber) {
        this.dailyAssistanceNumber = dailyAssistanceNumber;
    }

    /**
     * Get daily assistance charges
     * @return Daily assistance charges
     */
    public double getDailyAssistanceCharges() {
        return dailyAssistanceCharges;
    }

    /**
     * Set daily assistance charges
     * @param dailyAssistanceCharges Daily assistance charges
     */
    public void setDailyAssistanceCharges(double dailyAssistanceCharges) {
        this.dailyAssistanceCharges = dailyAssistanceCharges;
    }

    /**
     * Get hours worked on tour bookings
     * @return Hours worked on tour bookings
     */
    public double getTourBookingHours() {
        return tourBookingHours;
    }

    /**
     * Set hours worked on tour bookings
     * @param tourBookingHours Hours worked on tour bookings
     */
    public void setTourBookingHours(double tourBookingHours) {
        this.tourBookingHours = tourBookingHours;
    }

    /**
     * Get tour booking charges
     * @return Tour booking charges
     */
    public double getTourBookingCharges() {
        return tourBookingCharges;
    }

    /**
     * Set tour booking charges
     * @param tourBookingCharges Tour booking charges
     */
    public void setTourBookingCharges(double tourBookingCharges) {
        this.tourBookingCharges = tourBookingCharges;
    }

    /**
     * Get expense amounts
     * @return Total expense amounts
     */
    public float getExpenseAmount() {
        return expenseAmount;
    }

    /**
     * Set total expense amounts
     * @param expenseAmount Total expense amounts
     */
    public void setExpenseAmount(float expenseAmount) {
        this.expenseAmount = expenseAmount;
    }

    /**
     * Get hours worked on workdays
     * @return Hours worked on workdays
     */
    public double getWorkDayHours() {
        return workDayHours;
    }

    /**
     * Set hours worked on workdays
     * @param workDayHours amount of hours worked on workdays
     */
    public void setWorkDayHours(double workDayHours) {
        this.workDayHours = workDayHours;
    }

    /**
     * Get workday charges
     * @return Workday charges
     */
    public double getWorkDayCharges() {
        return workDayCharges;
    }

    /**
     * Set workday charges
     * @param workDayCharges Workday charges
     */
    public void setWorkDayCharges(double workDayCharges) {
        this.workDayCharges = workDayCharges;
    }

    /**
     * Get total stat holiday hours worked
     * @return
     */
    public double getStatHours() {
        return statHours;
    }

    /**
     * Set total stat holiday hours worked
     * @param statHours
     */
    public void setStatHours(double statHours) {
        this.statHours = statHours;
    }

    /**
     * Get total income tax deductions
     * @return
     */
    public double getIncomeTax() {
        return incomeTax;
    }

    /**
     * Set total income tax deductions
     * @param incomeTax
     */
    public void setIncomeTax(double incomeTax) {
        this.incomeTax = incomeTax;
    }

    /**
     * Get total amount of cpp deductions
     * @return CPP deductions
     */
    public double getCppDeductions() {
        return cppDeductions;
    }

    /**
     * Set total amount of cpp deductions
     * @param cppDeductions CPP deductions
     */
    public void setCppDeductions(double cppDeductions) {
        this.cppDeductions = cppDeductions;
    }

    /**
     * Get total amount of ei deductions
     * @return EI deductions
     */
    public double getEiDeductions() {
        return eiDeductions;
    }

    /**
     * Set total amount of ei deductions
     * @param eiDeductions EI deductions
     */
    public void setEiDeductions(double eiDeductions) {
        this.eiDeductions = eiDeductions;
    }

    /**
     * Get employee gross pay for the month
     * @return Employee gross pay
     */
    public double getGrossPay() {
        return grossPay;
    }

    /**
     * Set employee gross pay for the month
     * @param grossPay Employee gross pay
     */
    public void setGrossPay(double grossPay) {
        this.grossPay = grossPay;
    }

    /**
     * Get employee net pay for the month
     * @return Employee net pay
     */
    public double getNetPay() {
        return netPay;
    }

    /**
     * Set employee net pay for the month
     * @param netPay Employee net pay
     */
    public void setNetPay(double netPay) {
        this.netPay = netPay;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Paystub)) return false;
        Paystub paystub = (Paystub) o;
        return paystubId == paystub.paystubId &&
                employeeId == paystub.employeeId &&
                Float.compare(paystub.monthlySalary, monthlySalary) == 0 &&
                Float.compare(paystub.hourlyWage, hourlyWage) == 0 &&
                Double.compare(paystub.timeOffHours, timeOffHours) == 0 &&
                Double.compare(paystub.dailyAssistanceNumber, dailyAssistanceNumber) == 0 &&
                Double.compare(paystub.dailyAssistanceCharges, dailyAssistanceCharges) == 0 &&
                Double.compare(paystub.tourBookingHours, tourBookingHours) == 0 &&
                Double.compare(paystub.tourBookingCharges, tourBookingCharges) == 0 &&
                Float.compare(paystub.expenseAmount, expenseAmount) == 0 &&
                Double.compare(paystub.workDayHours, workDayHours) == 0 &&
                Double.compare(paystub.workDayCharges, workDayCharges) == 0 &&
                Double.compare(paystub.statHours, statHours) == 0 &&
                Double.compare(paystub.incomeTax, incomeTax) == 0 &&
                Double.compare(paystub.cppDeductions, cppDeductions) == 0 &&
                Double.compare(paystub.eiDeductions, eiDeductions) == 0 &&
                Double.compare(paystub.grossPay, grossPay) == 0 &&
                Double.compare(paystub.netPay, netPay) == 0 &&
                Objects.equals(dateOfPaystub, paystub.dateOfPaystub) &&
                Objects.equals(firstName, paystub.firstName) &&
                Objects.equals(lastName, paystub.lastName) &&
                Objects.equals(address, paystub.address) &&
                Objects.equals(city, paystub.city) &&
                Objects.equals(emailAddress, paystub.emailAddress);
    }

    @Override
    public int hashCode() {
        return Objects.hash(paystubId, employeeId, dateOfPaystub, firstName, lastName, address, city, emailAddress, monthlySalary, hourlyWage, timeOffHours, dailyAssistanceNumber, dailyAssistanceCharges, tourBookingHours, tourBookingCharges, expenseAmount, workDayHours, workDayCharges, statHours, incomeTax, cppDeductions, eiDeductions, grossPay, netPay);
    }

    @Override
    public String toString() {
        return "Paystub{" +
                "paystubId=" + paystubId +
                ", employeeId=" + employeeId +
                ", dateOfPaystub=" + dateOfPaystub +
                ", firstName='" + firstName + '\'' +
                ", lastName='" + lastName + '\'' +
                ", address='" + address + '\'' +
                ", city='" + city + '\'' +
                ", emailAddress='" + emailAddress + '\'' +
                ", monthlySalary=" + monthlySalary +
                ", hourlyWage=" + hourlyWage +
                ", timeOffHours=" + timeOffHours +
                ", dailyAssistanceNumber=" + dailyAssistanceNumber +
                ", dailyAssistanceCharges=" + dailyAssistanceCharges +
                ", tourBookingHours=" + tourBookingHours +
                ", tourBookingCharges=" + tourBookingCharges +
                ", expenseAmount=" + expenseAmount +
                ", workDayHours=" + workDayHours +
                ", workDayCharges=" + workDayCharges +
                ", statHours=" + statHours +
                ", incomeTax=" + incomeTax +
                ", cppDeductions=" + cppDeductions +
                ", eiDeductions=" + eiDeductions +
                ", grossPay=" + grossPay +
                ", netPay=" + netPay +
                '}';
    }
}

